{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","Router/PrivateRoute.js","Router/PublicRoute.js","Router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","children","to","PublicRoute","AppRouter","path","element","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"0MAAaA,EAEK,kBAFLA,EAGM,mBAHNA,EAKO,qBALPA,EAMI,uBANJA,EAUI,kBAVJA,EAWc,6BAXdA,EAYK,wBAZLA,EAaK,wBAbLA,EAcI,wBAdJA,EAgBW,qCAhBXA,EAkBE,eAlBFA,EAqBO,gBCnBdC,EAAe,CACjBC,UAAU,G,QCYRD,EAAe,CACjBE,OAAO,GACPC,YAAa,MCfXH,EAAe,CACjBI,WAAW,GCGFC,EAAcC,YAAgB,CACvCC,GDDqB,WAAmC,IAAjCC,EAAgC,uDAAxBR,EAAcS,EAAU,uCAEvD,OAAQA,EAAOC,MACX,KAAKX,EAED,OAAO,2BACDS,GADN,IAEGJ,WAAW,IAElB,KAAKL,EAED,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAGnB,QACI,OAAOI,ICffG,SFY2B,WAAkC,IAAjCH,EAAgC,uDAAxBR,EAAcS,EAAU,uCAE5D,OAAQA,EAAOC,MAEX,KAAKX,EACD,kCACOS,GADP,IAEIL,YAAaM,EAAOG,UAG5B,KAAKb,EACD,kCACOS,GADP,IAEIN,OAAO,GAAD,mBACCM,EAAMN,QADP,CAEFO,EAAOG,YAInB,KAAKb,EACD,kCACOS,GADP,IAEIL,YAAa,OAErB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAQM,EAAMN,OAAOW,KACjB,SAAAC,GAAC,OAAKA,EAAEC,KAAON,EAAOG,QAAQG,GAAMN,EAAOG,QAAUE,OAGjE,KAAKf,EACD,kCACOS,GADP,IAEIN,OAAQM,EAAMN,OAAOc,QACjB,SAAAF,GAAC,OAAKA,EAAEC,KAAOP,EAAML,YAAYY,MAErCZ,YAAa,OAGrB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAO,YAAKO,EAAOG,WAE3B,KAAKb,EACD,sBACOC,GAEX,QACI,OAAOQ,IE7DfS,KHHuB,WAAmC,IAAlCT,EAAiC,uDAAzBR,EAAcS,EAAW,uCAEzD,OAAQA,EAAOC,MACX,KAAKX,EACD,kCACOS,GADP,IAEIP,UAAU,GACPQ,EAAOG,SAGlB,KAAKb,EACD,kCACOS,GADP,IAEIP,UAAU,IAGlB,KAAKF,EACD,MAAM,CACFE,UAAU,GAGlB,QACI,OAAOO,MIxBbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAG9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAgBC,O,wCCVlBC,EAAUC,8CAEVC,EAAgB,SAAEC,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAEvCC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAe,QAAXE,EACOE,MAAOD,GAGPC,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAQ3BQ,EAAgB,SAAET,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAEvCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAASC,aAAaC,QAAQ,UAAY,GAEhD,MAAe,QAAXV,EACOE,MAAOD,EAAI,CACdD,SACAG,QAAQ,CACJ,UAAWK,KAKZN,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,M,kCCzCpBY,EAAiB,WAAgB,IAAfxC,EAAc,uDAAP,GAEjC,OAAOA,EAAOW,KACX,SAACC,GAAD,mBAAC,eACMA,GADP,IAEI6B,IAAKC,IAAO9B,EAAE6B,KAAKE,SACnBC,MAAOF,IAAO9B,EAAEgC,OAAOD,eCqB7BE,EAAc,SAACC,GAAD,MAAY,CAC5BtC,KAAMX,EACNa,QAASoC,IAQAC,EAAwB,iBAAO,CAACvC,KAAMX,IAyB7CmD,EAAe,SAACF,GAAD,MAAY,CAC7BtC,KAAMX,EACNa,QAASoC,IA0BPG,EAAe,iBAAO,CAACzC,KAAMX,IAuB7BqD,EAAc,SAAClD,GAAD,MAAY,CAC5BQ,KAAMX,EACNa,QAASV,ICvCPmD,EAAiB,iBAAM,CACzB3C,KAAMX,IAGJuD,EAAQ,SAAEC,GAAF,MAAa,CACvB7C,KAAMX,EACNa,QAAS2C,IAGAC,EAAc,WACvB,OAAO,SAAEC,GACLjB,aAAakB,QACbD,ED8ByB,CAC7B/C,KAAMX,IC9BF0D,EAAUE,OAKZA,EAAS,iBAAO,CAClBjD,KAAMX,I,gBC9FG6D,EAAU,WAA0B,IAAxB5D,EAAuB,uDAAR,GAEpC,EAA4B6D,mBAAS7D,GAArC,mBAAO8D,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAW/D,IAITiE,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,gBCd3BK,GAAc,WAEvB,IAAMZ,EAAWa,cAEjB,EAAoDV,EAAS,CACzDW,OAAQ,oBACRC,UAAW,WAFf,mBAAQC,EAAR,KAAyBC,EAAzB,KAKA,EAA0Dd,EAAS,CAC/De,MAAO,SACPC,OAAQ,mBACRC,WAAY,SACZC,WAAY,WAJhB,mBAAQC,EAAR,KAA4BC,EAA5B,KAOQT,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UACRG,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAmBnC,OACI,sBAAKG,UAAU,4BAAf,SACI,uBAAKA,UAAU,MAAf,UACI,uBAAKA,UAAU,wBAAf,UACI,0CACA,wBAAMC,SAtBF,SAACpE,GFrBC,IAACqE,EAAOC,EEsB1BtE,EAAEuE,iBAEF5B,GFxBmB0B,EEwBEZ,EFxBKa,EEwBGZ,EFtBjC,uCAAO,WAAQf,GAAR,iBAAA6B,EAAA,sEAEgB1D,EAAe,OAAQ,CAAEuD,QAAOC,YAAY,QAF5D,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGrD,EAHH,QAKKsD,IACJjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAIf2B,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAf9B,2CAAP,yDEyCgB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAOG,EACP2B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAOI,EACP0B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,kBAMtB,uBAAKa,UAAU,wBAAf,UACI,2CACA,wBAAMC,SAjDC,SAACpE,GAGpB,GAFAA,EAAEuE,iBAEER,IAAeC,EACf,OAAOgB,IAAKC,KAAK,QAAS,sCAAoC,SFN7C,IAACZ,EAAOC,EAAUjB,EESvCV,GFTsB0B,EESEP,EFTKQ,EESGP,EFTOV,EESKQ,EFRhD,uCAAO,WAAOlB,GAAP,iBAAA6B,EAAA,sEAEgB1D,EAAe,WAAY,CAAEuD,QAAOC,WAAUjB,QAAQ,QAFtE,cAEGoB,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGrD,EAHH,QAKKsD,IACJjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAIf2B,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAf9B,2CAAP,yDEkDgB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,QACLC,MAAQO,EACRuB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,QACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQQ,EACRsB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,aACLC,MAAQS,EACRqB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,0BACZ9B,KAAK,aACLC,MAAQU,EACRoB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,+B,SC5HzB+B,GAAS,WAElB,IAAM1C,EAAWa,cACVH,EAAQiC,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAnCkD,KAKP,OACI,uBAAKc,UAAU,mCAAf,UACI,uBAAMA,UAAU,0BAAhB,SACMd,IAEN,0BACIc,UAAU,yBACVoB,QAVS,WACjB5C,EAAUD,MAON,UAII,oBAAGyB,UAAU,wBACb,kDCtBHqB,GAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNhE,MAAO,SACPiE,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXNC,GAAgB,SAAC,GAAa,IAAZpE,EAAW,EAAXA,MACnBqE,EAAgBrE,EAAhBqE,MAAO9D,EAASP,EAATO,KACf,OACI,iCACI,kCAAU8D,IACV,sCAAS9D,EAAKY,Y,wCCJbmD,GAAc,iBAAM,CAC7B5G,KAAMX,ICMJwH,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,KAAMC,cAAc,SAEpB,IAAMC,GAAMrF,MAASsF,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAC3CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAE,SAE7BG,GAAU,CACdlB,MAAO,GACPmB,MAAO,GACP1F,MAAOmF,GAAIpF,SACXF,IAAK0F,GAASxF,UAGH4F,GAAgB,WAE3B,IAAQrI,EAAcgG,aAAY,SAAA5F,GAAK,OAAIA,EAAMD,MAAzCH,UACAD,EAAgBiG,aAAY,SAAA5F,GAAK,OAAIA,EAAMG,YAA3CR,YAEFsD,EAAWa,cAGjB,EAAkCT,mBAASoE,GAAIpF,UAA/C,mBAAO6F,EAAP,KAAkBC,EAAlB,KACA,EAA8B9E,mBAASwE,GAASxF,UAAhD,mBAAO+F,EAAP,KAAgBC,EAAhB,KAEA,EAAoChF,oBAAS,GAA7C,mBAAOiF,EAAP,KAAmBC,EAAnB,KAEA,EAAoClF,mBAAS0E,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEOT,EAA4BQ,EAA5BR,MAAOnB,EAAqB2B,EAArB3B,MAAOvE,EAAckG,EAAdlG,MAAOH,EAAOqG,EAAPrG,IAE5BuG,qBAAU,WAGND,EADC9I,GAGaoI,MAGf,CAACpI,EAAY8I,IAIhB,IAAME,EAAa,WACjB1F,EDxD8B,CAC9B/C,KAAMX,ICwDN0D,EAAUR,KACVgG,EAAcV,KAGVtE,EAAoB,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACvB+E,EAAc,2BACPD,GADM,kBAER9E,EAAOC,KAAOD,EAAOE,UAgD/B,OACE,+BACE,gBAAC,KAAD,CACEgF,OAAShJ,EAETiJ,eAAgBF,EAChBG,MAAO/B,GACPgC,eAAgB,IAChBtE,UAAU,QACVuE,iBAAiB,cAPnB,UASE,oCAAQrJ,EAAe,SAAW,QAAlC,aACA,wBACA,wBACI8E,UAAU,YACVC,SA5Ce,SAACpE,GACxBA,EAAEuE,iBAEF,IRnD6BrC,EQmDvByG,EAAc7G,IAAOE,GACrB4G,EAAY9G,IAAOD,GAEzB,OAAI8G,EAAYE,cAAcD,GACnB5D,IAAKC,KAAK,SAAS,sDAAsD,SAGjFsB,EAAMuC,OAAOC,OAAS,EACdd,GAAc,IAKvBtF,EAFEtD,GR9DyB6C,EQgEAgG,ER9D7B,uCAAO,WAAMvF,GAAN,iBAAA6B,EAAA,+EAIoBhD,EAAc,UAAD,OAAYU,EAAMjC,IAAOiC,EAAO,OAJjE,cAIOuC,EAJP,gBAKoBA,EAAKC,OALzB,QAKOrD,EALP,QAOSsD,GACJhC,EAAUP,EAAaF,IAEvB8C,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAVlC,kDAcC8D,QAAQC,IAAR,MAdD,0DAAP,uDAvC4B,SAAE/G,GAC9B,8CAAO,WAAOS,EAAUuG,GAAjB,uBAAA1E,EAAA,+DAEiB0E,IAAW/I,KAAxB4E,EAFJ,EAEIA,IAAK1B,EAFT,EAESA,KAFT,kBAKoB7B,EAAc,SAAUU,EAAO,QALnD,cAKOuC,EALP,gBAMoBA,EAAKC,OANzB,QAMOrD,EANP,QAQSsD,KACJzC,EAAMjC,GAAKoB,EAAK8H,OAAOlJ,GACvBiC,EAAMO,KAAO,CACT2G,IAAKrE,EACL1B,KAAMA,GAEVV,EAASV,EAAYC,KAd1B,kDAkBC8G,QAAQC,IAAR,MAlBD,0DAAP,wDQwGYI,CAAkBnB,IAI9BD,GAAc,QACdI,MAiBI,UAIE,uBAAKlE,UAAU,aAAf,UACE,yDACA,eAAC,KAAD,CACIiB,SAhEgB,SAACpF,GACzB6H,EAAa7H,GACbmI,EAAc,2BACPD,GADM,IAETlG,MAAOhC,MA6DHsD,MAASjE,EAAeA,EAAY2C,MAAQ4F,EAC5CzD,UAAU,oBAIhB,uBAAKA,UAAU,aAAf,UACE,sDACA,eAAC,KAAD,CACIiB,SAlEc,SAACpF,GACvB+H,EAAW/H,GACXmI,EAAc,2BACPD,GADM,IAETrG,IAAK7B,MA+DDsD,MAAOwE,EACPwB,QAAYjK,EAAeA,EAAYwC,IAAMiG,EAC7C3D,UAAU,oBAIhB,wBACA,uBAAKA,UAAU,aAAf,UACE,oDACA,wBACEvE,KAAK,OACLuE,UAAS,wBAAoB6D,GAAc,cAC3C7C,YAAY,uBACZ9B,KAAK,QACLkG,aAAa,MACbjG,MAAOiD,EACPnB,SAAUjC,IAGZ,wBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAKF,uBAAKA,UAAU,aAAf,UACE,2BACEvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,QACZqE,KAAK,IACLnG,KAAK,QACLC,MAAOoE,EACPtC,SAAUjC,IAEZ,wBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAKF,0BAAQvE,KAAK,SAASuE,UAAU,oCAAhC,UACE,oBAAGA,UAAU,gBACb,yDCzLCsF,I,cAAY,WACrB,IAAM9G,EAAWa,cAMjB,OACI,yBACIW,UAAU,sBACVoB,QAPe,WACnB5C,EAAUR,KACVQ,EAAS6D,OAGT,SAII,oBAAGrC,UAAU,oBCbZuF,GAAiB,WAE1B,IAAM/G,EAAWa,cAIjB,OACI,0BACIW,UAAU,4BACVoB,QANa,WACjB5C,EVgEJ,uCAAO,WAAMA,EAAUuG,GAAhB,mBAAA1E,EAAA,6DACKvE,EAAOiJ,IAAWrJ,SAASR,YAA3BY,GADL,kBAIoBuB,EAAc,UAAD,OAAYvB,GAAO,GAAI,UAJxD,cAIOwE,EAJP,gBAKoBA,EAAKC,OALzB,QAKOrD,EALP,QAOSsD,GACJhC,EAAUN,KAEV2C,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAVlC,kDAcC8D,QAAQC,IAAR,MAdD,0DAAP,0DU7DI,UAII,oBAAG9E,UAAU,iBACb,uDCGZrC,IAAO6H,OAAO,MAEd,IAAMC,GAAYC,aAAgB/H,KAErBgI,GAAiB,WAE5B,IAAMnH,EAAWa,cACjB,EAAgC8B,aAAY,SAAA5F,GAAK,OAAIA,EAAMG,YAAnDT,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YACR0F,EAAQO,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAnC4E,IAIR,EAAgChC,mBAAUrB,aAAaC,QAAQ,aAAe,SAA9E,mBAAOoI,EAAP,KAAiBC,EAAjB,KAEA5B,qBAAU,WAERzF,EX8DA,uCAAO,WAAMA,GAAN,mBAAA6B,EAAA,+EAIgBhD,EAAc,UAJ9B,cAIGiD,EAJH,gBAKgBA,EAAKC,OALrB,OAKGrD,EALH,OAOGjC,EAASwC,EAAcP,EAAK4I,SAElCtH,EAAUL,EAAYlD,IATnB,kDAYC4J,QAAQC,IAAR,MAZD,0DAAP,yDW5DC,CAACtG,IAiCF,OACI,uBAAKwB,UAAU,kBAAf,UACE,eAAC,GAAD,IAEA,eAAC,KAAD,CACEyF,UAAYA,GACZxK,OAASA,EACT8K,cAAc,QACdC,YAAY,MACZ3E,SAAWA,GACX4E,gBAxBe,SAAClI,EAAOF,EAAOH,EAAKwI,GAS1C,MAAM,CACJ7B,MATW,CACV8B,gBAAkBvF,IAAQ7C,EAAMO,KAAK2G,IAAO,UAAY,UACxDmB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAmBHC,mBA1CY,SAAC3K,GACrB2C,EAAU6D,OA0CFoE,cAvCY,SAAC5K,GACrB2C,EXVsC,CACtC/C,KAAMX,EACNa,QWQ0BE,KAuClB6K,OApCW,SAAC7K,GACpBgK,EAAYhK,GACZ0B,aAAakD,QAAQ,WAAY5E,IAmCzB8K,aAhCW,WACnBnI,EAASR,MAgCD4I,YAAa,EACbC,KAAOjB,EACPkB,WAAY,CACR/I,MAAOoE,MAIb,eAAC,GAAD,IAEGjH,GAAgB,eAAC,GAAD,IAGnB,eAAC,GAAD,QChFK6L,GAXM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAGnB,OADU7F,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAlC4E,IAGKoG,EACD,eAAC,IAAD,CAAUC,GAAG,YCETC,GAXK,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SAGlB,OAFc7F,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAlC4E,IAGD,eAAC,IAAD,CAAUqG,GAAG,MACbD,GCEGG,GAAY,WAErB,IAAM3I,EAAWa,cAEVrE,EAAYmG,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAvChB,SAOP,OALAiJ,qBAAU,WACNzF,EbsCJ,uCAAO,WAAMA,GAAN,iBAAA6B,EAAA,sEAEgBhD,EAAe,cAF/B,cAEGiD,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGrD,EAHH,QAKKsD,IACJjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAKfV,EAASJ,KAhBV,2CAAP,yDapCG,CAACI,IAEAxD,EACO,2CAIT,eAAC,IAAD,UACI,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOoM,KAAK,SAASC,QACX,eAAC,GAAD,UACI,eAAC,GAAD,QAKd,eAAC,IAAD,CAAOD,KAAK,KAAMC,QACV,eAAC,GAAD,UACK,eAAC,GAAD,cC9BZC,GAAc,WACvB,OACI,+BACI,eAAC,IAAD,CAAUjL,MAAOA,EAAjB,SACI,eAAC,GAAD,S,OCNhBkL,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.5ee56f3b.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal : '[ui] Open modal',\r\n    uiCloseModal : '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout Event',\r\n\r\n\r\n    eventStartAddNew: '[event] Start Add New',\r\n    eventAddnew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event Updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStarTokenRenew: '[auth] Start token renew',\r\n    authStarLogout: '[auth] Logout',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authStarLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Calendario',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el Pastel',\r\n//     user:{\r\n//       _id: '123',\r\n//       name: 'Rogelio'\r\n//     }\r\n// }\r\n\r\nconst initialState = { \r\n    events:[],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive: \r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddnew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n\r\n            }\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n               ...state,\r\n               modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n        \r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if (method === 'GET'){\r\n        return fetch( url );\r\n\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token =  localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET'){\r\n        return fetch( url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        } );\r\n\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\"\r\n\r\nexport const prepareEvents =  (events=[]) => {\r\n    \r\n     return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n            \r\n        })\r\n\r\n     );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const {uid, name} = getState().auth;\r\n        \r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddnew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n\r\n    return async(dispatch) =>{\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch( eventUpdated(event) );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n\r\n    return async(dispatch, getState) =>{\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch( eventDeleted() );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({type: types.eventDeleted});\r\n\r\n\r\n\r\nexport const eventStartloading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n        const resp = await fetchConToken('events');\r\n        const body = await resp.json();\r\n\r\n        const events = prepareEvents(body.eventos);\r\n\r\n        dispatch( eventLoaded(events) );\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) =>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () =>({\r\n    type: types.eventLogout\r\n})","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) =>{\r\n\r\n    return async ( dispatch ) =>{\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n\r\n            Swal.fire('Error', body.msg, 'error');\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n\r\n            Swal.fire('Error', body.msg, 'error');\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n\r\n            // Swal.fire('Error', body.msg, 'error');\r\n            dispatch(checkingFinish());\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () =>({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () =>{\r\n    return ( dispatch ) =>{\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authStarLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\r\n        lEmail: 'rogelio@gmail.com',\r\n        lPassword: '123456',\r\n    } );\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\r\n        rName: 'Felipe',\r\n        rEmail: 'felipe@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    } );\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas debe ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={lEmail}\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={lPassword}\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () =>{\r\n        dispatch( startLogout() );\r\n    }\r\n    return (\r\n        <div className='navbar navabar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand text-white'>\r\n                { name }\r\n            </span>\r\n            <button \r\n                className='btn btn-outline-danger'\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className='fas fa-sign-out-alt'></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span>-{ user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () =>({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () =>({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from 'moment';\r\n\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent={\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n  \r\n  const { modalOpen } = useSelector(state => state.ui);\r\n  const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n  \r\n  const [titleValid, setTitleValid] = useState(true);\r\n  \r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const {notes, title, start, end} = formValues;\r\n\r\n  useEffect(() => {\r\n\r\n    if(activeEvent){\r\n      setFormValues(activeEvent);\r\n    }else{\r\n      setFormValues(initEvent);\r\n    }\r\n    \r\n  }, [activeEvent,setFormValues]);\r\n\r\n\r\n  \r\n  const closeModal = () => {\r\n    dispatch( uiCloseModal() );\r\n    dispatch( eventClearActiveEvent() );\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleInputChange = ({target})=>{\r\n       setFormValues({\r\n           ...formValues,\r\n           [target.name]: target.value\r\n       }) \r\n  }\r\n\r\n  const handleStartDateChange = (e) =>{\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n  }\r\n  const handleEndDateChange = (e) =>{\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n  };\r\n\r\n  const handleSubmitForm = (e) =>{\r\n    e.preventDefault();\r\n    \r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if( momentStart.isSameOrAfter(momentEnd)){\r\n        return Swal.fire('Error!','La fecha fin debe de ser mayor a la fecha de inicio','error');\r\n    }\r\n\r\n    if(title.trim().length < 2 ){\r\n        return setTitleValid(false);\r\n    }\r\n\r\n    if (activeEvent){\r\n      \r\n      dispatch (eventStartUpdate(formValues));\r\n\r\n    }else{\r\n\r\n      dispatch( eventStartAddNew( formValues ) );\r\n\r\n    };\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={ modalOpen }\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n      >\r\n        <h1> { (activeEvent) ? 'Editar' : 'Nuevo'} Evento</h1>\r\n        <hr />\r\n        <form \r\n            className=\"container\"\r\n            onSubmit={handleSubmitForm}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label>Fecha y hora inicio</label>\r\n            <DateTimePicker\r\n                onChange={handleStartDateChange}\r\n                value={ (activeEvent) ? activeEvent.start : dateStart }\r\n                className=\"form-control\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Fecha y hora fin</label>\r\n            <DateTimePicker\r\n                onChange={handleEndDateChange}\r\n                value={dateEnd}\r\n                minDate= { (activeEvent) ? activeEvent.end : dateEnd }\r\n                className=\"form-control\"\r\n            />\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"form-group\">\r\n            <label>Titulo y notas</label>\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n              placeholder=\"Título del evento\"\r\n              name=\"title\"\r\n              autoComplete=\"off\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              Una descripción corta\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Notas\"\r\n              rows=\"5\"\r\n              name=\"notes\"\r\n              value={notes}\r\n              onChange={handleInputChange}\r\n            ></textarea>\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              Información adicional\r\n            </small>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n            <i className=\"far fa-save\"></i>\r\n            <span> Guardar</span>\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () =>{\r\n        dispatch( eventClearActiveEvent() );\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            className='btn btn-primary fab'\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () =>{\r\n        dispatch ( eventStartDelete() )\r\n    }\r\n    return (\r\n        <button\r\n            className='btn btn-danger fab-danger'\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className='fas fa-trash'></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nimport { eventClearActiveEvent, eventSetActive, eventStartloading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { events, activeEvent } = useSelector(state => state.calendar);\r\n  const { uid } = useSelector(state => state.auth);\r\n\r\n  \r\n\r\n  const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch( eventStartloading() );\r\n\r\n  }, [dispatch])\r\n\r\n  const onDoubleClick = (e) =>{\r\n    dispatch( uiOpenModal() );\r\n  }\r\n\r\n  const onSelectEvent = (e) =>{\r\n    dispatch ( eventSetActive(e) )\r\n  }\r\n\r\n  const onViewChange = (e) =>{\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e)\r\n  }\r\n\r\n  const onSelectSlot = () => {\r\n    dispatch(eventClearActiveEvent());\r\n  }\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) =>{\r\n     const style ={\r\n        backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n        borderRadius: '0px',\r\n        opacity: 0.8,\r\n        display: 'block',\r\n        color: 'white'\r\n\r\n     }\r\n     return{\r\n       style\r\n     }\r\n  }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n          <Navbar/>\r\n            \r\n          <Calendar\r\n            localizer={ localizer }\r\n            events={ events }\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            messages={ messages }\r\n            eventPropGetter={ eventStyleGetter }\r\n            onDoubleClickEvent={ onDoubleClick }\r\n            onSelectEvent={ onSelectEvent }\r\n            onView={ onViewChange }\r\n            onSelectSlot={ onSelectSlot }\r\n            selectable={ true }\r\n            view={ lastView }\r\n            components={{\r\n                event: CalendarEvent\r\n            }}\r\n            />\r\n          \r\n          <AddNewFab />\r\n          {\r\n            (activeEvent) && <DeleteEventFab/>\r\n          }\r\n          \r\n          <CalendarModal/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n \r\n \r\n \r\nconst PrivateRoute = ({children}) => {\r\n    \r\nconst {uid} = useSelector(state => state.auth)\r\n    return (\r\n        !!uid\r\n        ?   children  \r\n        :  <Navigate to=\"/login\" />\r\n    )              \r\n}\r\n \r\n \r\nexport default PrivateRoute;","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n \r\nconst PublicRoute = ({children}) => {\r\n    const {uid} = useSelector(state => state.auth)\r\n  \r\n    return ( !!uid\r\n        ? <Navigate to=\"/\" />\r\n        : children \r\n        \r\n        )\r\n        \r\n}\r\n \r\nexport default PublicRoute;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport PublicRoute from './PublicRoute'\r\n\r\n\r\nexport const AppRouter = () => {\r\n \r\n    const dispatch = useDispatch();\r\n   \r\n    const {checking} = useSelector(state => state.auth)\r\n   \r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n   \r\n    }, [dispatch]);\r\n    \r\n    if (checking){\r\n      return ( <h5>Cargando</h5> ) \r\n    }\r\n   \r\n    return (\r\n      <Router>\r\n          <Routes>\r\n            <Route path=\"/login\" element={\r\n                      <PublicRoute>\r\n                          <LoginScreen />\r\n                      </PublicRoute>\r\n                  } \r\n                  />\r\n            \r\n            <Route path=\"/*\"  element ={\r\n                    <PrivateRoute>\r\n                         <CalendarScreen/>\r\n                    </PrivateRoute>\r\n                }\r\n            />\r\n            {/* <Route path=\"*\" element={<CalendarScreen />} />   */}\r\n   \r\n          </Routes>\r\n      </Router>\r\n    );\r\n  }","import React from 'react';\r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './Router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter/>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}